# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: catlog.proto

import sys

_b = sys.version_info[0] < 3 and (lambda x: x) or (lambda x: x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()

DESCRIPTOR = _descriptor.FileDescriptor(
    name='catlog.proto',
    package='catlog',
    syntax='proto3',
    serialized_options=None,
    serialized_pb=_b(
        '\n\x0c\x63\x61tlog.proto\x12\x06\x63\x61tlog\"u\n\x0f\x43\x65rtificateData\x12\'\n\ndata_chunk\x18\x01 \x01(\x0b\x32\x11.catlog.DataChunkH\x00\x12%\n\tbox_chunk\x18\x02 \x01(\x0b\x32\x10.catlog.BoxChunkH\x00\x42\x12\n\x10\x63\x65rtificate_data\"H\n\x11LogEntryReference\x12\x0e\n\x06log_id\x18\x01 \x01(\x0c\x12\x11\n\tleaf_hash\x18\x02 \x01(\x0c\x12\x10\n\x08\x65ntry_id\x18\x03 \x01(\x04\"`\n\x14\x43\x65rtificateReference\x12\x1a\n\x12\x66ingerprint_sha256\x18\x01 \x01(\x0c\x12,\n\tlog_entry\x18\x02 \x03(\x0b\x32\x19.catlog.LogEntryReference\"P\n\tDataChunk\x12\x34\n\x0eprevious_chunk\x18\x01 \x01(\x0b\x32\x1c.catlog.CertificateReference\x12\r\n\x05\x63hunk\x18\x02 \x01(\x0c\"e\n\x08\x42oxChunk\x12\x34\n\x0eprevious_chunk\x18\x01 \x01(\x0b\x32\x1c.catlog.CertificateReference\x12#\n\tfile_data\x18\x02 \x03(\x0b\x32\x10.catlog.FileData\"U\n\x08\x46ileData\x12\x0c\n\x04name\x18\x01 \x01(\t\x12;\n\x15\x63\x65rtificate_reference\x18\x02 \x01(\x0b\x32\x1c.catlog.CertificateReferenceb\x06proto3')
)

_CERTIFICATEDATA = _descriptor.Descriptor(
    name='CertificateData',
    full_name='catlog.CertificateData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='data_chunk', full_name='catlog.CertificateData.data_chunk', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='box_chunk', full_name='catlog.CertificateData.box_chunk', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name='certificate_data', full_name='catlog.CertificateData.certificate_data',
            index=0, containing_type=None, fields=[]),
    ],
    serialized_start=24,
    serialized_end=141,
)

_LOGENTRYREFERENCE = _descriptor.Descriptor(
    name='LogEntryReference',
    full_name='catlog.LogEntryReference',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='log_id', full_name='catlog.LogEntryReference.log_id', index=0,
            number=1, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='leaf_hash', full_name='catlog.LogEntryReference.leaf_hash', index=1,
            number=2, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='entry_id', full_name='catlog.LogEntryReference.entry_id', index=2,
            number=3, type=4, cpp_type=4, label=1,
            has_default_value=False, default_value=0,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=143,
    serialized_end=215,
)

_CERTIFICATEREFERENCE = _descriptor.Descriptor(
    name='CertificateReference',
    full_name='catlog.CertificateReference',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='fingerprint_sha256', full_name='catlog.CertificateReference.fingerprint_sha256', index=0,
            number=1, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='log_entry', full_name='catlog.CertificateReference.log_entry', index=1,
            number=2, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=217,
    serialized_end=313,
)

_DATACHUNK = _descriptor.Descriptor(
    name='DataChunk',
    full_name='catlog.DataChunk',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='previous_chunk', full_name='catlog.DataChunk.previous_chunk', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='chunk', full_name='catlog.DataChunk.chunk', index=1,
            number=2, type=12, cpp_type=9, label=1,
            has_default_value=False, default_value=_b(""),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=315,
    serialized_end=395,
)

_BOXCHUNK = _descriptor.Descriptor(
    name='BoxChunk',
    full_name='catlog.BoxChunk',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='previous_chunk', full_name='catlog.BoxChunk.previous_chunk', index=0,
            number=1, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='file_data', full_name='catlog.BoxChunk.file_data', index=1,
            number=2, type=11, cpp_type=10, label=3,
            has_default_value=False, default_value=[],
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=397,
    serialized_end=498,
)

_FILEDATA = _descriptor.Descriptor(
    name='FileData',
    full_name='catlog.FileData',
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name='name', full_name='catlog.FileData.name', index=0,
            number=1, type=9, cpp_type=9, label=1,
            has_default_value=False, default_value=_b("").decode('utf-8'),
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
        _descriptor.FieldDescriptor(
            name='certificate_reference', full_name='catlog.FileData.certificate_reference', index=1,
            number=2, type=11, cpp_type=10, label=1,
            has_default_value=False, default_value=None,
            message_type=None, enum_type=None, containing_type=None,
            is_extension=False, extension_scope=None,
            serialized_options=None, file=DESCRIPTOR),
    ],
    extensions=[
    ],
    nested_types=[],
    enum_types=[
    ],
    serialized_options=None,
    is_extendable=False,
    syntax='proto3',
    extension_ranges=[],
    oneofs=[
    ],
    serialized_start=500,
    serialized_end=585,
)

_CERTIFICATEDATA.fields_by_name['data_chunk'].message_type = _DATACHUNK
_CERTIFICATEDATA.fields_by_name['box_chunk'].message_type = _BOXCHUNK
_CERTIFICATEDATA.oneofs_by_name['certificate_data'].fields.append(
    _CERTIFICATEDATA.fields_by_name['data_chunk'])
_CERTIFICATEDATA.fields_by_name['data_chunk'].containing_oneof = _CERTIFICATEDATA.oneofs_by_name['certificate_data']
_CERTIFICATEDATA.oneofs_by_name['certificate_data'].fields.append(
    _CERTIFICATEDATA.fields_by_name['box_chunk'])
_CERTIFICATEDATA.fields_by_name['box_chunk'].containing_oneof = _CERTIFICATEDATA.oneofs_by_name['certificate_data']
_CERTIFICATEREFERENCE.fields_by_name['log_entry'].message_type = _LOGENTRYREFERENCE
_DATACHUNK.fields_by_name['previous_chunk'].message_type = _CERTIFICATEREFERENCE
_BOXCHUNK.fields_by_name['previous_chunk'].message_type = _CERTIFICATEREFERENCE
_BOXCHUNK.fields_by_name['file_data'].message_type = _FILEDATA
_FILEDATA.fields_by_name['certificate_reference'].message_type = _CERTIFICATEREFERENCE
DESCRIPTOR.message_types_by_name['CertificateData'] = _CERTIFICATEDATA
DESCRIPTOR.message_types_by_name['LogEntryReference'] = _LOGENTRYREFERENCE
DESCRIPTOR.message_types_by_name['CertificateReference'] = _CERTIFICATEREFERENCE
DESCRIPTOR.message_types_by_name['DataChunk'] = _DATACHUNK
DESCRIPTOR.message_types_by_name['BoxChunk'] = _BOXCHUNK
DESCRIPTOR.message_types_by_name['FileData'] = _FILEDATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CertificateData = _reflection.GeneratedProtocolMessageType('CertificateData', (_message.Message,), dict(
    DESCRIPTOR=_CERTIFICATEDATA,
    __module__='catlog_pb2'
    # @@protoc_insertion_point(class_scope:catlog.CertificateData)
))
_sym_db.RegisterMessage(CertificateData)

LogEntryReference = _reflection.GeneratedProtocolMessageType('LogEntryReference', (_message.Message,), dict(
    DESCRIPTOR=_LOGENTRYREFERENCE,
    __module__='catlog_pb2'
    # @@protoc_insertion_point(class_scope:catlog.LogEntryReference)
))
_sym_db.RegisterMessage(LogEntryReference)

CertificateReference = _reflection.GeneratedProtocolMessageType('CertificateReference', (_message.Message,), dict(
    DESCRIPTOR=_CERTIFICATEREFERENCE,
    __module__='catlog_pb2'
    # @@protoc_insertion_point(class_scope:catlog.CertificateReference)
))
_sym_db.RegisterMessage(CertificateReference)

DataChunk = _reflection.GeneratedProtocolMessageType('DataChunk', (_message.Message,), dict(
    DESCRIPTOR=_DATACHUNK,
    __module__='catlog_pb2'
    # @@protoc_insertion_point(class_scope:catlog.DataChunk)
))
_sym_db.RegisterMessage(DataChunk)

BoxChunk = _reflection.GeneratedProtocolMessageType('BoxChunk', (_message.Message,), dict(
    DESCRIPTOR=_BOXCHUNK,
    __module__='catlog_pb2'
    # @@protoc_insertion_point(class_scope:catlog.BoxChunk)
))
_sym_db.RegisterMessage(BoxChunk)

FileData = _reflection.GeneratedProtocolMessageType('FileData', (_message.Message,), dict(
    DESCRIPTOR=_FILEDATA,
    __module__='catlog_pb2'
    # @@protoc_insertion_point(class_scope:catlog.FileData)
))
_sym_db.RegisterMessage(FileData)

# @@protoc_insertion_point(module_scope)
